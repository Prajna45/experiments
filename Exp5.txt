import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error,mean_absolute_error
df=pd.read_csv('housing.csv')
print(df)
df.info()
print(df.isnull().sum())
print(df.head())
plt.scatter(df['RM'],df['MEDV'],color='red',marker='*')
plt.xlabel('RM')
plt.ylabel('MEDV')
plt.title('Scatterplot')
plt.show()
x=df.drop('RM',axis=1)

y=df['RM']
print(y)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=42)
print("xtrain shape:",x_train.shape)
print("xtest shape:",x_test.shape)
print("ytrain shape:",y_train.shape)
print("ytest shape:",y_test.shape)
reg=LinearRegression()
reg.fit(x,y)
y_pred=reg.predict(x_test)
reg.predict([[5,0,15]]) # Corrected to 3 features
print(reg.coef_)
print(reg.intercept_)
z=9.7900215*650+1128.879253617697
train_score=reg.score(x_train,y_train)
test_score=reg.score(x_test,y_test)
print('train score(R-squared):',train_score)
print('test score(R-squared):',test_score)

mse=mean_squared_error(y_test,y_pred)
mae=mean_absolute_error(y_test,y_pred)
print('Mean Square Error:',mse)
print('mean Absoluter Error:',mae)