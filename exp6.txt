import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import linear_model
from sklearn.metrics import mean_squared_error,mean_absolute_error
df=pd.read_csv("/content/housing (4).csv")
print(df)
df.info()
print(df.isnull().sum())
print(df.head())
plt.scatter(df.Buit_up_area,df.rent,color='red',marker='*')
plt.xlabel("Buit_up_area")
plt.ylabel("rent")
plt.show()
x=df.drop('rent',axis=1)
print(x)
y=df.rent
print(y)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=42)
print("x_train shape",x_train.shape)
print("x_test shape",x_test.shape)
print("y_train shape",y_train.shape)
print("y_test shape",y_test.shape)
reg=linear_model.LinearRegression()
reg.fit(x,y)
y_pred=reg.predict(x_test)
reg.predict([[650,0,1]])
print(reg.coef_)
print(reg.intercept_)
z=9.7900215*650+1128.879253617697
print(z)
train_score=reg.score(x_train,y_train)
test_score=reg.score(x_test,y_test)
print('trainscore(R-squared):',train_score)
print('testscore(R-squared):',test_score)
mse=mean_squared_error(y_test,y_pred)
mae=mean_absolute_error(y_test,y_pred)
print('mean_squared_error:',mse)
print('mean_absolute_error:',mae)